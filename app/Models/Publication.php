<?php

namespace App\Models;
use App\Models\User;
use Carbon\Carbon;
use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Crypt;

class Publication extends Model
{
    use HasFactory,SoftDeletes;

    protected $fillable=
        [
            'title','slug','description','goal','user_id','category_id','image','update_id','active'
        ];

    protected $appends =
        [
            'id_hash',
            'humansDate'
        ];

    protected static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        self::creating(function ($publication) {
            $publication->slug = str_slug($publication->title, '-', config('locale'));
        });
    }
    public function category()
    {
        return $this->belongsTo(Category::class);
    }

    public function user()
    {
       return $this->belongsTo(User::class);
    }

    public function getIdHashAttribute()
    {
       return Crypt::encryptString($this->id);
    }

    public function scopeActivePublication($q)
    {
     return $q->where('active',true);
    }

    public function scopeNews($q)
    {
        return $q->where([
            'category_id'=>Category::TYPE_NEWS,

            'active'        =>true
            ]);
    }
    public function scopeActivityEvent($q)
    {
        return $q->whereIn( 'category_id',[Category::TYPE_ACTIVITIES, Category::TYPE_EVENTS])->where(
            'active',true
            );
    }
    public function scopeBidsAdvertising($q)
    {
        return $q->where([
            'category_id' => Category::TYPE_ADVERTISING,
            'active'=>true
            ]);
    }
    public function getHumansDateAttribute()
    {
        return Carbon::parse($this->created_at)->translatedFormat( 'l / j F, Y' );
    }
}
